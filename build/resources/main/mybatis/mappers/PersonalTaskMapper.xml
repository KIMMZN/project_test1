<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cis.personal_task.repository.PersonalTaskRepository">

    <!--업무 정보를 저장-->
    <insert id="insertTask" parameterType="com.cis.personal_task.dto.PersonalTaskDTO">
        INSERT INTO personal_task (task_num, task_title, task_content, directive_id, receive_id, create_at)
        VALUES ( #{task_num},#{task_title}, #{task_content}, #{directive_id}, #{receive_id},#{create_at});
    </insert>

    <!--최신 날짜 기준으로 받은 업무 가져오기-->
    <select id="getReceivedTasks" parameterType="string" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT *
        FROM personal_task
        WHERE receive_id = #{receive_id}
        ORDER BY create_at DESC;
    </select>

    <!--최신 날짜 기준으로 받은 업무 메인에 가져오기-->
    <select id="getMainTasks" parameterType="string" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT *
        FROM personal_task
        WHERE receive_id = #{receive_id}
        ORDER BY create_at DESC
            limit 0,3
    </select>

    <!-- 업무 상세 조회 -->
    <select id="findTaskById" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT *
        FROM personal_task
        WHERE task_num = #{task_num}
    </select>

    <!--모든 업무 가져오기 (메인)-->
    <select id="findAllTasks" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT task_num , task_title , directive_id , create_at , task_status
        FROM personal_task
        ORDER BY create_at DESC
    </select>

    <!--상태별 업무 가져오기 (메인)-->
    <select id="findTasksByStatus" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT task_num , task_title , directive_id , create_at , task_status
        FROM personal_task
        WHERE task_status = #{task_status}
        ORDER BY create_at DESC
    </select>

    <!--    &lt;!&ndash; 업무에 첨부된 파일 조회 &ndash;&gt;-->
    <!--    <select id="findByTaskId" resultType="com.cis.personal_task.dto.TaskFileDTO">-->
    <!--        SELECT *-->
    <!--        FROM task_file-->
    <!--        WHERE task_num = #{task_num}-->
    <!--    </select>-->

    <!-- 부서, 직급, 이름으로 사원 정보 조회 -->
    <select id="findEmployeeByDeptRankName" parameterType="map" resultType="com.cis.member.dto.ManagerEmployeeDTO">
        SELECT
            m.emp_name, m.emp_dept, m.emp_rank,
            m.join_date, m.resident_num
        FROM
            manager m
        WHERE
            m.emp_dept = #{empDept}
          AND m.emp_rank = #{empRank}
          AND m.emp_name = #{empName}
    </select>

    <!-- emp_id로 직원 정보 조회 -->
    <select id="findEmployeeById" parameterType="String" resultType="com.cis.member.dto.EmployeeDTO">
        SELECT
            emp_id, emp_pass
        FROM
            employee
        WHERE
            emp_id = #{empId}
    </select>
    <!-- 페이징 처리된 받은 업무 목록 조회 -->
    <select id="findReceivedTasksByReceiveId" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT *
        FROM personal_task
        WHERE receive_id = #{receiveId}
        ORDER BY create_at DESC
    </select>

    <!--    &lt;!&ndash;업무 수행도 업데이트&ndash;&gt;-->
    <!--    <update id="updateTaskStatus">-->
    <!--        UPDATE personal_task-->
    <!--        SET task_status = #{taskStatus}-->
    <!--        WHERE task_num = #{task_num}-->
    <!--    </update>-->

    <!-- 업무 상태에 따라 페이징된 업무 목록 조회 -->
    <select id="selectTasksByStatus" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT task_num, task_title, task_status, create_at
        FROM personal_task
        WHERE task_status = #{status}
        ORDER BY create_at DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

    <!-- 업무 상태 변경 (진행 -> 완료) -->
    <update id="updateTaskStatus" parameterType="int">
        UPDATE personal_task
        SET task_status = '완료'
        WHERE task_num = #{task_num} AND task_status = '진행';
    </update>

    <!-- 전체 업무 상태 조회 (전체보기용) -->
    <select id="selectAllTasks" resultType="com.cis.personal_task.dto.PersonalTaskDTO">
        SELECT task_num, task_title, task_status, create_at
        FROM personal_task
        ORDER BY create_at DESC
            LIMIT #{limit} OFFSET #{offset}
    </select>

</mapper>
