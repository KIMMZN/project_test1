<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.cis.board.repository.IF_Reopository">

    <insert id="insertOne" parameterType="com.cis.board.vo.boardVO">
        INSERT INTO board_table
        (category, board_num, board_title, board_content, create_at, emp_id, boardHits, fileAttached)
        VALUES (#{category},(SELECT nextval3('board_seq') FROM DUAL),#{board_title},#{board_content},default,#{emp_id},default,#{fileAttached});
    </insert>


    <insert id="insertOne_fr" parameterType="com.cis.board.vo.boardVO">
        INSERT INTO board_table
        (category, board_num, board_title, board_content, create_at, emp_id, boardHits, fileAttached)
        VALUES (#{category},(SELECT nextval3('board_seq_fr') FROM DUAL),#{board_title},#{board_content},default,#{emp_id},default,#{fileAttached});
    </insert>


    <!-- 본래
         <select id="listAll" resultType="company.company_project.vo.boardVO">
                  SELECT * from board where category = '공지사항' order by board_num DESC;
          </select> -->
    <!--
    <select id="listAll" resultType="company.company_project.vo.boardVO">
        SELECT * from board_table where category = '공지사항' order by board_num DESC;
    </select>
    -->

    <select id="listAll" resultType="com.cis.board.vo.boardVO">
        SELECT  board_num,board_title,emp_id, boardHits,
                DATE_FORMAT(create_at, "%y-%m-%d") AS create_at
        from board_table
        where category = '공지사항'
        order by board_num DESC;
    </select>



    <!-- 게시글 업데이트 -->
    <update id="updateHits" parameterType="int">
        update board_table set boardHits=boardHits+1 where board_num = #{num}
    </update>
    <!-- 게시글하나보기 -->
    <select id="selectOne" parameterType="int" resultType="com.cis.board.vo.boardVO">
        select * from board_table
        where board_num = #{num} and category = '공지사항'
    </select>
    <!-- 게시글하나보기 -->
    <select id="selectOne_fr" parameterType="int" resultType="com.cis.board.vo.boardVO">
        select * from board_table
        where board_num = #{num} and category = '자유게시판'
    </select>

    <!-- 게시글 한개 삭제 -->
    <delete id="deleteOne" parameterType="int">
        delete from board_table
        where board_num = #{number}
    </delete>

    <!-- 게시글 삭제 new version-->
    <delete id="deleteOnE" parameterType="com.cis.board.vo.boardVO">
            delete from board_table
            where board_num = #{board_num} and category = #{category}
    </delete>
    <!-- 게시글 하나 수정 -->
    <update id="updateOne" parameterType="com.cis.board.vo.boardVO">
            update board_table
            set board_title = #{board_title}, board_content=#{board_content}
            where board_num =#{board_num} and category = #{category}
    </update>
    <!-- 공지사항 게시글 조회  -->
    <select id="fiandAll" parameterType="com.cis.board.vo.searchDTO" resultType="com.cis.board.vo.boardVO">
            select *
            from board_table
            where category = '공지사항'
            <include refid="search"/>
            order by board_num DESC
            LIMIT #{pagination.limitStart}, #{recordSize}
    </select>
    <!--자유게시판 게시글 조회 -->
    <select id="fiandAll_fr" parameterType="com.cis.board.vo.searchDTO" resultType="com.cis.board.vo.boardVO">
        select *
        from board_table
        where category = '자유게시판'
        <include refid="search"/>
        order by board_num DESC
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>
    <!--공지사항 게시글 카운트 -->
    <select id="count" parameterType="com.cis.board.vo.searchDTO" resultType="int">
        select count(*)
        from board_table
        where category = '공지사항'
        <include refid="search"/>
    </select>


    <!--자유 게시판 게시글 카운트 -->
    <select id="count_fr" parameterType="com.cis.board.vo.searchDTO" resultType="int">
        select count(*)
        from board_table
        where category = '자유게시판'
        <include refid="search"/>
    </select>

    <!--게시글 검색-->
    <sql id="search">
            <!-- 검색 키워드 있을때 -->
              <if test="keyword != null and keyword !=''">
                <choose>
                  <!-- 검색 유형이 있을 때-->
                    <when test="searchType != null and searchType !=''">
                       <choose>
                           <when test="'board_title'.equals(searchType)">
                                AND board_title like concat('%', #{keyword}, '%')
                           </when>
                           <when test="'board_content'.equals(searchType)">
                               AND board_content like concat('%', #{keyword}, '%')
                           </when>
                           <when test="'emp_id'.equals(searchType)">
                               AND emp_id like concat('%', #{keyword}, '%')
                           </when>
                       </choose>
                    </when>
                    <!-- 검색 유형이 없을때 때(전체검색일때)-->
                    <otherwise>
                        AND (
                            board_title like concat('%', #{keyword}, '%')
                            OR board_content like concat('%', #{keyword}, '%')
                            OR emp_id like concat('%', #{keyword}, '%')
                        )
                    </otherwise>
                </choose>
              </if>
    </sql>
        <!-- 게시판 파일 첨부-->
    <insert id="insertFile" parameterType="com.cis.board.vo.fileVO">
        INSERT INTO board_file
        (category, board_num, original_name, save_name, file_size, created_date)
        SELECT
            bt.category,
            #{board_num},
            #{original_name},
            #{save_name},
            #{file_size},
            NOW()
        FROM
            board_table bt
        WHERE
            bt.category = #{category}
            LIMIT 1;
    </insert>
    <!-- board_num 가져오기 for 파일첨부 getBoardNum()-->
    <select id="getBoardNum" resultType="int" parameterType="String">
        select board_num from board_table
        where category = #{categoryTemp}
        order by board_num DESC
        Limit 1;
    </select>
    <!-- 파일 정보 가져오기 selectFile-->
    <select id="selectFile" parameterType="map" resultType="com.cis.board.vo.fileVO">
        select * from board_file
        where board_num = #{num} AND category =#{category};
    </select>
<!--    deleteFile(String fileId)-->
    <delete id="deleteFile" parameterType="map">
        delete from board_file
        where file_id = #{num} AND category = #{category}
    </delete>

<!--    파일 정보 가져오기-->
    <select id="selectFileById" parameterType="map" resultType="com.cis.board.vo.fileVO">
        SELECT * FROM board_file
        WHERE file_id = #{num} AND category = #{category}
    </select>

<!--    댓글 입력하기  insertComentOne(commentVO commentvo)t-->
    <insert id="insertCommentOne" parameterType="com.cis.board.vo.commentVO">
        INSERT INTO comment
        (category, board_num, comment_num, comment_content,emp_id)
        values (#{category},#{board_num},(SELECT nextval3('comment_seq') FROM DUAL),#{comment_content},#{emp_id})
    </insert>

<!-- 댓글 가져오기  List<commentVO> selectAllCmt(Map<String, Object> params)throws Exception;-->
    <select id="selectAllCmt" parameterType="Map" resultType="com.cis.board.vo.commentVO">
        select * from comment
        where category = #{category} AND board_num = #{board_num}
    </select>


<!--    boolean deleteCommentByCategoryAndId(Map<String, Object> params)-->

    <delete id="deleteComment" parameterType="Map">
        DELETE FROM comment WHERE category = #{category} AND comment_num = #{comment_num}
    </delete>

<!--    getCmtByparamsOne 삭제시 파일 정보 확인-->
    <select id="getCmtByparamsOne" parameterType="map" resultType="com.cis.board.vo.commentVO">
        SELECT *
        FROM comment
        WHERE category = #{category}
          AND comment_num = #{comment_num}
    </select>




    <!--    INSERT INTO board_table-->
<!--    (category, board_num, board_title, board_content, create_at, emp_id, boardHits, fileAttached)-->
<!--    VALUES (#{category},(SELECT nextval3('board_seq') FROM DUAL),#{board_title},#{board_content},default,#{emp_id},default,#{fileAttached});-->
<!--</insert>-->


<!--    public void fileAdd(boardVO boardvo)throws Exception;-->


        <!--
      <select id="findById" parameterType="long" resultType="com.example.yourpackage.domain.User">
          SELECT * FROM users WHERE id = #{id}
      </select>
      <insert id="insert" parameterType="com.example.yourpackage.domain.User">
          INSERT INTO users (name, email) VALUES (#{name}, #{email})
      </insert>
      <update id="update" parameterType="com.example.yourpackage.domain.User">
          UPDATE users SET name = #{name}, email = #{email} WHERE id = #{id}
      </update>
      <delete id="delete" parameterType="long">
          DELETE FROM users WHERE id = #{id}
      </delete>

      -->
</mapper>